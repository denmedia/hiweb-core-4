var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};
$jscomp.SymbolClass=function(a,b){this.$jscomp$symbol$id_=a;$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:b})};$jscomp.SymbolClass.prototype.toString=function(){return this.$jscomp$symbol$id_};$jscomp.Symbol=function(){function a(c){if(this instanceof a)throw new TypeError("Symbol is not a constructor");return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX+(c||"")+"_"+b++,c)}var b=0;return a}();
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("Symbol.iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});$jscomp.initSymbolIterator=function(){}};
$jscomp.initSymbolAsyncIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.asyncIterator;a||(a=$jscomp.global.Symbol.asyncIterator=$jscomp.global.Symbol("Symbol.asyncIterator"));$jscomp.initSymbolAsyncIterator=function(){}};$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};
$jscomp.iteratorFromArray=function(a,b){$jscomp.initSymbolIterator();a instanceof String&&(a+="");var c=0,d={next:function(){if(c<a.length){var e=c++;return{value:b(e,a[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d};
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Array.prototype.keys",function(a){return a?a:function(){return $jscomp.iteratorFromArray(this,function(a){return a})}},"es6","es3");
var deepMerge={isMergeableObject:function(a){return a&&"object"===typeof a&&"[object RegExp]"!==Object.prototype.toString.call(a)&&"[object Date]"!==Object.prototype.toString.call(a)},emptyTarget:function(a){return Array.isArray(a)?[]:{}},cloneIfNecessary:function(a,b){return b&&!0===b.clone&&deepMerge.isMergeableObject(a)?deepMerge.deepmerge(deepMerge.emptyTarget(a),a,b):a},defaultArrayMerge:function(a,b,c){var d=a.slice();b.forEach(function(b,f){"undefined"===typeof d[f]?d[f]=deepMerge.cloneIfNecessary(b,
c):deepMerge.isMergeableObject(b)?d[f]=deepMerge.deepmerge(a[f],b,c):-1===a.indexOf(b)&&d.push(deepMerge.cloneIfNecessary(b,c))});return d},mergeObject:function(a,b,c){var d={};deepMerge.isMergeableObject(a)&&Object.keys(a).forEach(function(b){d[b]=deepMerge.cloneIfNecessary(a[b],c)});Object.keys(b).forEach(function(e){deepMerge.isMergeableObject(b[e])&&a[e]?d[e]=deepMerge.deepmerge(a[e],b[e],c):d[e]=deepMerge.cloneIfNecessary(b[e],c)});return d},deepmerge:function(a,b,c){var d=Array.isArray(b),e=
(c||{arrayMerge:deepMerge.defaultArrayMerge}).arrayMerge||deepMerge.defaultArrayMerge;return d?Array.isArray(a)?e(a,b,c):deepMerge.cloneIfNecessary(b,c):deepMerge.mergeObject(a,b,c)},all:function(a,b){if(!Array.isArray(a)||2>a.length)throw Error("first argument should be an array with at least two elements");return a.reduce(function(a,d){return deepMerge.deepmerge(a,d,b)})}};
