<?php
	
	namespace hiweb\components\Fields\Types\Repeat;
	
	
	use hiweb\components\Fields\Field;
	use hiweb\components\Fields\Field_Options;
	
	
	class Field_Repeat_Options extends Field_Options{
		
		
		/**
		 * @return Field_Repeat
		 */
		public function field(){
			return parent::field(); // TODO: Change the autogenerated stub
		}
		
		
		/**
		 * @return array|Field_Repeat_Options|Field_Repeat_Col[][]
		 */
		public function get_cols(){
			$cols = $this->_( 'cols' );
			if( !is_array( $cols ) ){
				$cols = [];
				$this->_( 'cols', [] );
			}
			return $this->_( 'cols' );
		}
		
		
		/**
		 * @return array
		 */
		public function get_flex_ids(){
			return array_keys( $this->get_cols() );
		}
		
		
		public function label_button_new_row( $set = null ){
			return $this->_( 'label_button_new_row', $set, __( 'Add new row', 'hiweb-core-4' ) );
		}
		
		
		/**
		 * @param null $set
		 * @return array|Field_Repeat_Options|mixed|null
		 */
		public function label_button_clear_all( $set = null ){
			return $this->_( 'label_button_clear_all', $set, __( 'Clear repeat', 'hiweb-core-4' ) );
		}
		
		
		public function label_button_copy_all( $set = null ){
			return $this->_( 'label_button_copy_all', $set, __( 'Copy all rows', 'hiweb-core-4' ) );
		}
		
		public function text_confirm_clear_all($set = null){
			return $this->_('text_confirm_clear_all', $set, __('Remove all table rows?','hiweb-core-4'));
		}
		
		
		/**
		 * @return array
		 * @deprecated
		 */
		public function get_cols_simple( $prefix_name = '' ){
			$R = [];
			foreach( $this->get_cols() as $group => $cols ){
				if( !is_array( $cols ) ) continue;
				foreach( $cols as $global_id => $col ){
					$R[ $group ][ $global_id ] = $col->_get_optionsCollect();
					$new_name = '\'' . $prefix_name . '[\' + index + \'][' . $col->field()->id() . ']\'';
					$R[ $group ][ $global_id ]['admin_html'] = preg_replace( '/(\sname=)(\'|")/im', ' :name=$2', $col->field()->get_admin_html( null, $new_name ) );
				}
			}
			return $R;
		}
		
		
		/**
		 * @return bool
		 */
		public function have_cols(){
			return count( $this->get_cols() ) > 0;
		}
		
		
		/**
		 * @param                     $flex_id
		 * @param Field|Field_Options $Field_or_FieldOptions
		 * @return Field_Repeat_Col
		 */
		public function add_col_flex_field( $flex_id, $Field_or_FieldOptions ){
			$cols = $this->get_cols();
			$Flex = $this->field()->get_flex( $flex_id );
			$col = new Field_Repeat_Col( $this->field(), $Field_or_FieldOptions, $Flex );
			$cols[ $Flex->ID() ][ $col->field()->id() ] = $col;
			$this->_( 'cols', $cols );
			return $col;
		}
		
		
		/**
		 * @param Field|Field_Options $Field_or_FieldOptions
		 * @param string              $flex_id
		 * @return Field_Repeat_Col
		 */
		public function add_col_field( $Field_or_FieldOptions, $flex_id = '' ){
			return $this->add_col_flex_field( $flex_id, $Field_or_FieldOptions );
		}
		
	}