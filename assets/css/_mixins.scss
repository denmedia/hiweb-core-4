@import "functions";

@mixin border_radius($topleft: 5px, $topright: $topleft, $bottomright: $topleft, $bottomleft: $topleft) {
	-webkit-border-top-left-radius: $topleft;
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	-moz-border-radius-topleft: $topleft;
	-moz-border-radius-topright: $topright;
	-moz-border-radius-bottomright: $bottomright;
	-moz-border-radius-bottomleft: $bottomleft;
	border-top-left-radius: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
}

@mixin background_image($size: cover) {
	background: no-repeat center center;
	background-size: $size;
}

@mixin transition($key: all, $duration: .2s, $easing: ease-in-out, $delay: 0ms) {
	$params: null;
	@each $val in $key {
		@if ($params == '') {
			@if ($delay != 0) {
				$params: $val $duration $easing $delay;
			} @else {
				$params: $val $duration $easing;
			}
		} @else {
			@if ($delay != 0) {
				$params: $params, $val $duration $easing $delay;
			} @else {
				$params: $params, $val $duration $easing;
			}

		}

	}
	-webkit-transition: $params;
	-moz-transition: $params;
	-o-transition: $params;
	transition: $params;
}

@mixin transform($transform: none) {
	-webkit-transform: $transform;
	-moz-transform: $transform;
	-o-transform: $transform;
	transform: $transform;
}

@mixin filter($filter: blur(5px)) {
	-webkit-filter: $filter;
	-moz-filter: $filter;
	-o-filter: $filter;
	-ms-filter: $filter;
	filter: $filter;
}

@mixin position_stretch($top: 0, $right: 0, $bottom: 0, $left: 0) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

@mixin position_stretch_2($padding: 0) {
	position: absolute;
	top: $padding;
	right: $padding;
	bottom: $padding;
	left: $padding;
}

@mixin image_stretch($object_fit: cover) {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 100%;
	object-fit: $object_fit;
	-o-object-fit: $object_fit;
}

@mixin opacity($opacity, $important: false) {
	@if ($important) {
		-webkit-opacity: $opacity !important;
		-moz-opacity: $opacity !important;
		-ms-opacity: $opacity !important;
		-o-opacity: $opacity !important;
		opacity: $opacity !important;
		$opacity-ie: $opacity * 100 !important;
		filter: alpha(opacity=$opacity-ie) !important; //IE8
	} @else {
		-webkit-opacity: $opacity;
		-moz-opacity: $opacity;
		-ms-opacity: $opacity;
		-o-opacity: $opacity;
		opacity: $opacity;
		$opacity-ie: $opacity * 100;
		filter: alpha(opacity=$opacity-ie); //IE8
	}
}

@mixin box-shadow($size: 5px, $opacity: .35, $offset_x: 0px, $offset_y: 0px, $inset: false, $color: #000) {
	$props: $offset_x $offset_y $size 0 rgba($color, $opacity);
	@if $inset {
		$props: inset $offset_x $offset_y $size 0 rgba(0, 0, 0, $opacity);
	}

	-webkit-box-shadow: $props;
	-moz-box-shadow: $props;
	-o-box-shadow: $props;
	box-shadow: $props;
}

@mixin text-shadow($size: 5px, $x: 0, $y: 0, $color: rgba(0, 0, 0, 0.35)) {
	$props: $x $y $size $color;
	-webkit-text-shadow: $props;
	-moz-text-shadow: $props;
	-o-text-shadow: $props;
	text-shadow: $props;
}

@mixin rotate($time: 2s, $easing: linear ) {

	@-webkit-keyframes rotating /* Safari and Chrome */
	{
		from {
			-webkit-transform: rotate(0deg);
			-o-transform: rotate(0deg);
			transform: rotate(0deg);
		}
		to {
			-webkit-transform: rotate(360deg);
			-o-transform: rotate(360deg);
			transform: rotate(360deg);
		}
	}

	@keyframes rotating {
		from {
			-ms-transform: rotate(0deg);
			-moz-transform: rotate(0deg);
			-webkit-transform: rotate(0deg);
			-o-transform: rotate(0deg);
			transform: rotate(0deg);
		}
		to {
			-ms-transform: rotate(360deg);
			-moz-transform: rotate(360deg);
			-webkit-transform: rotate(360deg);
			-o-transform: rotate(360deg);
			transform: rotate(360deg);
		}
	}
	-webkit-animation: rotating $time $easing infinite;
	-moz-animation: rotating $time $easing infinite;
	-ms-animation: rotating $time $easing infinite;
	-o-animation: rotating $time $easing infinite;
	animation: rotating $time $easing infinite;
}

@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model; // Safari <= 5
	-moz-box-sizing: $box-model; // Firefox <= 19
	box-sizing: $box-model;
}

@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> * {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

@mixin image_centered() {
	@include transform(translate(50%, 50%));
	> img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		@include transform(translate(-50%, -50%));
	}
}

@mixin vertical_middle($top: 50%) {
	position: absolute;
	top: $top;
	bottom: unset;
	@include transform(translateY(-50%));
}

@mixin display-flex() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin flex($flex: 1) {
	-webkit-box-flex: $flex;
	-moz-box-flex: $flex;
	-webkit-flex: $flex;
	-ms-flex: $flex;
	flex: $flex;
}

@mixin order($order: 0) {
	-webkit-box-ordinal-group: $order;
	-moz-box-ordinal-group: $order;
	-ms-flex-order: $order;
	-webkit-order: $order;
	order: $order;
}

@mixin object-fit($object-fit: contain) {
	object-fit: $object-fit;
	-o-object-fit: $object-fit;
}

@mixin media-size($css_name: 'font-size', $size: 12px) {
	#{$css_name}: $size;
	@media all and (max-width: 1200px) {
		#{$css_name}: $size * 0.96;
	}
	@media all and (max-width: 992px) {
		#{$css_name}: $size * 0.90;
	}
	@media all and (max-width: 768px) {
		#{$css_name}: $size * 0.84;
	}
	@media all and (max-width: 576px) {
		#{$css_name}: $size * 0.78;
	}
}

@mixin media-size-x2($css_name: 'font-size', $size: 12px) {
	#{$css_name}: $size;
	@media all and (max-width: 1200px) {
		#{$css_name}: $size * 0.92;
	}
	@media all and (max-width: 992px) {
		#{$css_name} : $size * 0.86;
	}
	@media all and (max-width: 768px) {
		#{$css_name}: $size * 0.78;
	}
	@media all and (max-width: 576px) {
		#{$css_name}: $size * 0.62;
	}
}

@mixin media-size-x3($css_name: 'font-size', $size: 12px) {
	#{$css_name}: $size;
	@media all and (max-width: 1200px) {
		#{$css_name}: $size * 0.85;
	}
	@media all and (max-width: 992px) {
		#{$css_name}: $size * 0.75;
	}
	@media all and (max-width: 768px) {
		#{$css_name}: $size * 0.50;
	}
	@media all and (max-width: 576px) {
		#{$css_name}: $size * 0.35;
	}
}

@mixin font-size-media($font-size) {
	@include media-size(font-size, $font-size);
}

@mixin font-size-media-x2($font-size) {
	@include media-size-x2(font-size, $font-size);
}

@mixin font-size-media-x3($font-size) {
	@include media-size-x3(font-size, $font-size);
}


@mixin linear_gradient($top, $bottom, $start: 0%, $end: 100%) {
	background: $top;
	background: -moz-linear-gradient(top, $top $start, $bottom $end);
	background: -webkit-gradient(linear, left top, left bottom, color-stop($start, $top), color-stop($end, $bottom));
	background: -webkit-linear-gradient(top, $top $start, $bottom $end);
	background: -o-linear-gradient(top, $top $start, $bottom $end);
	background: -ms-linear-gradient(top, $top $start, $bottom $end);
	background: linear-gradient(to bottom, $top $start, $bottom $end);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#000000', GradientType=0);
}


@mixin loader_dots_1() {
	position: absolute;
	top: 50%;
	left: 50%;
	width: 142px;
	height: 40px;
	margin: -20px 0 0 -71px;
	background: #fff;
	filter: contrast(20);
	.dot {
		position: absolute;
		width: 16px;
		height: 16px;
		top: 12px;
		left: 15px;
		filter: blur(4px);
		background: #000;
		border-radius: 50%;
		transform: translateX(0);
		animation: dot 2.8s infinite;
	}
	.dots {
		transform: translateX(0);
		margin-top: 12px;
		margin-left: 31px;
		animation: dots 2.8s infinite;
	}
	.dots span {
		display: block;
		float: left;
		width: 16px;
		height: 16px;
		margin-left: 16px;
		filter: blur(4px);
		background: #000;
		border-radius: 50%;
	}
	@-moz-keyframes dot {
		50% {
			transform: translateX(96px);
		}
	}
	@-webkit-keyframes dot {
		50% {
			transform: translateX(96px);
		}
	}
	@-o-keyframes dot {
		50% {
			transform: translateX(96px);
		}
	}
	@keyframes dot {
		50% {
			transform: translateX(96px);
		}
	}
	@-moz-keyframes dots {
		50% {
			transform: translateX(-31px);
		}
	}
	@-webkit-keyframes dots {
		50% {
			transform: translateX(-31px);
		}
	}
	@-o-keyframes dots {
		50% {
			transform: translateX(-31px);
		}
	}
	@keyframes dots {
		50% {
			transform: translateX(-31px);
		}
	}
}